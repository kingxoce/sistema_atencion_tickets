//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace consumirsistemadetickets.wsempleadoc {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="wsempleadoc.wsempleadoSoap")]
    public interface wsempleadoSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/listaempleados", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet listaempleados();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/listaempleados", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> listaempleadosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/buscar_empleados", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet buscar_empleados(int idempleado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/buscar_empleados", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> buscar_empleadosAsync(int idempleado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/insertar_empleado", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int insertar_empleado(int idEmpleado, string nombre, string puesto, string correo, int telefono, string dirreccion, double sueldo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/insertar_empleado", ReplyAction="*")]
        System.Threading.Tasks.Task<int> insertar_empleadoAsync(int idEmpleado, string nombre, string puesto, string correo, int telefono, string dirreccion, double sueldo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/actualizar_empleado", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int actualizar_empleado(int idEmpleado, string nombre, string puesto, string correo, int telefono, string dirreccion, double sueldo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/actualizar_empleado", ReplyAction="*")]
        System.Threading.Tasks.Task<int> actualizar_empleadoAsync(int idEmpleado, string nombre, string puesto, string correo, int telefono, string dirreccion, double sueldo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/eliminar_empleado", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int eliminar_empleado(int idEmpleado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/eliminar_empleado", ReplyAction="*")]
        System.Threading.Tasks.Task<int> eliminar_empleadoAsync(int idEmpleado);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface wsempleadoSoapChannel : consumirsistemadetickets.wsempleadoc.wsempleadoSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class wsempleadoSoapClient : System.ServiceModel.ClientBase<consumirsistemadetickets.wsempleadoc.wsempleadoSoap>, consumirsistemadetickets.wsempleadoc.wsempleadoSoap {
        
        public wsempleadoSoapClient() {
        }
        
        public wsempleadoSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public wsempleadoSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public wsempleadoSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public wsempleadoSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataSet listaempleados() {
            return base.Channel.listaempleados();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> listaempleadosAsync() {
            return base.Channel.listaempleadosAsync();
        }
        
        public System.Data.DataSet buscar_empleados(int idempleado) {
            return base.Channel.buscar_empleados(idempleado);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> buscar_empleadosAsync(int idempleado) {
            return base.Channel.buscar_empleadosAsync(idempleado);
        }
        
        public int insertar_empleado(int idEmpleado, string nombre, string puesto, string correo, int telefono, string dirreccion, double sueldo) {
            return base.Channel.insertar_empleado(idEmpleado, nombre, puesto, correo, telefono, dirreccion, sueldo);
        }
        
        public System.Threading.Tasks.Task<int> insertar_empleadoAsync(int idEmpleado, string nombre, string puesto, string correo, int telefono, string dirreccion, double sueldo) {
            return base.Channel.insertar_empleadoAsync(idEmpleado, nombre, puesto, correo, telefono, dirreccion, sueldo);
        }
        
        public int actualizar_empleado(int idEmpleado, string nombre, string puesto, string correo, int telefono, string dirreccion, double sueldo) {
            return base.Channel.actualizar_empleado(idEmpleado, nombre, puesto, correo, telefono, dirreccion, sueldo);
        }
        
        public System.Threading.Tasks.Task<int> actualizar_empleadoAsync(int idEmpleado, string nombre, string puesto, string correo, int telefono, string dirreccion, double sueldo) {
            return base.Channel.actualizar_empleadoAsync(idEmpleado, nombre, puesto, correo, telefono, dirreccion, sueldo);
        }
        
        public int eliminar_empleado(int idEmpleado) {
            return base.Channel.eliminar_empleado(idEmpleado);
        }
        
        public System.Threading.Tasks.Task<int> eliminar_empleadoAsync(int idEmpleado) {
            return base.Channel.eliminar_empleadoAsync(idEmpleado);
        }
    }
}
